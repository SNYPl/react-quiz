{"version":3,"sources":["components/questionsForm/questionForm.module.css","components/InputSelectors/quizFormSelector.module.css","components/helper/startButton.module.css","components/InputSelectors/menuInputs.module.css","components/questionsForm/QuestionFormItems/QuestionFormItems.js","components/helper/Button.js","components/helper/Form.js","components/quizResult/TestResult.js","components/questionsForm/QuestionsForm.js","components/InputSelectors/categorySelectorItem/CategoryinputItem.js","components/InputSelectors/CategorySelector.js","components/InputSelectors/DifficultSelector.js","components/InputSelectors/QuizFormSelector.js","components/QuizForm.js","App.js","index.js","components/questionsForm/QuestionFormItems/questionFormItems.module.css","components/quizResult/testResult.module.css"],"names":["module","exports","QuestionFormItems","props","incorrentAnswer","questions","incorrect_answers","map","item","correctAnswers","correct_answer","allQuestion","decodeHtml","html","txt","document","createElement","innerHTML","value","className","styles","questionContainer","onChange","e","click","id","questionParagraph","question","Math","random","inputContainer","type","name","htmlFor","questionInputLabel","Button","buttonContainer","style","onClick","children","Form","onSubmit","submit","testResult","resultsContainer","results","result","repeatButton","repeatButtonHandler","QuestionForm","resetQuizForm","useState","Array","data","length","fill","setValue","choosedCorrectAnswer","setChoosedCorrectAnswer","quizIsFinished","setQuizIsFinished","inputRadioValidated","setInputIsNotValidated","onChangeHandler","target","event","preventDefault","choosedQuestion","filter","some","el","items","validatorErrorMessage","questionFormButton","CategoryInputItem","CategorySelector","quizCategory","menuInputContainer","inputLabel","itemId","onChangeCategory","inputSelector","DifficultSelector","onChangeDifficult","QuizFormSelector","SubmitForm","quizForm","categoryInput","difficultInput","quizButton","CreateForm","Difficult","setDifficult","category","setCategory","quizQuestions","setQuizQuestions","formSubmited","setFormSubmited","whichCategory","toLowerCase","axios","get","then","response","status","SelectedCategory","SelectedDifficult","App","QuizForm","ReactDOM","render","getElementById"],"mappings":"kGACAA,EAAOC,QAAU,CAAC,mBAAqB,yCAAyC,sBAAwB,8C,mBCAxGD,EAAOC,QAAU,CAAC,SAAW,mCAAmC,WAAa,uC,mBCA7ED,EAAOC,QAAU,CAAC,gBAAkB,uC,uCCApCD,EAAOC,QAAU,CAAC,WAAa,+BAA+B,cAAgB,kCAAkC,mBAAqB,yC,uJC6CtHC,EA5CW,SAACC,GACzB,IAAMC,EAAkBD,EAAME,UAAUC,kBAAkBC,KAAI,SAACC,GAC7D,OAAOA,KAEHC,EAAiB,CAACN,EAAME,UAAUK,gBAElCC,EAAW,sBAAOP,GAAoBK,GAE5C,SAASG,EAAWC,GAClB,IAAIC,EAAMC,SAASC,cAAc,YAEjC,OADAF,EAAIG,UAAYJ,EACTC,EAAII,MAGb,OACE,sBACEC,UAAWC,IAAOC,kBAClBC,SAAU,SAACC,GAAD,OAAOpB,EAAMqB,MAAMD,EAAGpB,EAAMsB,KAFxC,UAIE,mBAAGN,UAAWC,IAAOM,kBAArB,SACGd,EAAWT,EAAME,UAAUsB,YAG7BhB,EAAYJ,KAAI,SAACC,GAChB,IAAIiB,EAAKG,KAAKC,SACd,OACE,sBAAKV,UAAWC,IAAOU,eAAvB,UACE,uBACEC,KAAK,QACLN,GAAIA,EACJP,MAAOV,EACPwB,KAAM7B,EAAMsB,IACPtB,EAAMsB,IAEb,uBAAOQ,QAASR,EAAIN,UAAWC,IAAOc,mBAAtC,SACGtB,EAAWJ,e,iBCpBX2B,EAdA,SAAChC,GACd,OACE,qBAAKgB,UAAWC,IAAOgB,gBAAvB,SACE,wBAAQL,KAAK,SACLb,MAAM,SACNC,UAAWhB,EAAMkC,MACjBC,QAASnC,EAAMmC,QAHvB,SAKQnC,EAAMoC,cCELC,EAbF,SAACrC,GAGd,OAEI,sBAAMsC,SAAUtC,EAAMuC,OAAQvB,UAAWhB,EAAMkC,MAA/C,SACKlC,EAAMoC,Y,iCCQAI,EAXI,SAACxC,GAClB,OACE,sBAAKgB,UAAWC,IAAOwB,iBAAvB,UACE,oBAAGzB,UAAWC,IAAOyB,QAArB,6BAA+C1C,EAAM2C,UACrD,cAAC,EAAD,CAAQT,MAAOjB,IAAO2B,aAAcT,QAASnC,EAAM6C,oBAAnD,6BC6ESC,EA7EM,YAAkC,IAA/BtB,EAA8B,EAA9BA,SAAUuB,EAAoB,EAApBA,cAChC,EAA0BC,mBACxB,IAAIC,MAAMzB,EAAS0B,KAAKR,QAAQS,QAAQC,KAAK,OAD/C,mBAAOrC,EAAP,KAAcsC,EAAd,KAGA,EAAwDL,mBAAS,IAAjE,mBAAOM,EAAP,KAA6BC,EAA7B,KACA,EAA4CP,oBAAS,GAArD,mBAAOQ,EAAP,KAAuBC,EAAvB,KACA,EAAsDT,oBAAS,GAA/D,mBAAOU,EAAP,KAA4BC,EAA5B,KAEIrD,EAAiBkB,EAAS0B,KAAKR,QAAQtC,KAAI,SAACgB,GAAD,OAAOA,EAAEb,kBAElDqD,EAAkB,SAACxC,EAAGE,GAC1BP,EAAMO,GAAMF,EAAEyC,OAAO9C,MAErBsC,EAAStC,IAuBL+B,EACJ,cAAC,WAAD,UAEI,eAAC,EAAD,CAAMP,OAvBY,SAACuB,GACvBA,EAAMC,iBAEN,IAAIC,EAAkBjD,EAAMkD,QAC1B,SAAC5D,EAAMiB,GAAP,OAAcjB,IAASC,EAAegB,MAExCiC,EAAwBS,GAEJjD,EAAMmD,MAAK,SAAUC,GACvC,OAAc,OAAPA,KAIPR,GAAuB,GAIzBF,GAAkB,IAMd,UACGjC,EAAS0B,KAAKR,QAAQtC,KAAI,SAACgE,EAAO9C,GACjC,OACE,cAAC,EAAD,CAEEpB,UAAWkE,EACX9C,GAAIA,EACJD,MAAOuC,GAHFtC,MAOVoC,GACC,mBAAG1C,UAAWC,IAAOoD,sBAArB,8BAEF,cAAC,EAAD,CAAQnC,MAAOjB,IAAOqD,mBAAtB,yBAYR,OACE,eAAC,WAAD,YACId,GAAkBV,EACnBU,GACC,cAAC,EAAD,CACEb,OAAQW,EAAqBH,OAC7BN,oBAZoB,WAC1BE,GAAc,GACdU,GAAkB,GAClBF,EAAwB,IACxBF,EAAS,IAAIJ,MAAMzB,EAAS0B,KAAKR,QAAQS,QAAQC,KAAK,cC9D3CmB,MARf,SAA2BvE,GACzB,OACE,wBAAQe,MAAOf,EAAMe,MAAOO,GAAItB,EAAMsB,GAAtC,SACGtB,EAAMe,OADsCf,EAAMsB,K,gBCuI1CkD,EArIU,SAACxE,GACxB,IAAMyE,EAAe,CACnB,CACEnD,GAAI,MACJP,MAAO,gBAGT,CACEO,GAAI,EACJP,MAAO,qBAET,CACEO,GAAI,GACJP,MAAO,wBAET,CACEO,GAAI,GACJP,MAAO,uBAET,CACEO,GAAI,GACJP,MAAO,wBAET,CACEO,GAAI,GACJP,MAAO,sCAET,CACEO,GAAI,GACJP,MAAO,6BAET,CACEO,GAAI,GACJP,MAAO,8BAET,CACEO,GAAI,GACJP,MAAO,8BAET,CACEO,GAAI,GACJP,MAAO,oBAET,CACEO,GAAI,GACJP,MAAO,uBAET,CACEO,GAAI,GACJP,MAAO,yBAET,CACEO,GAAI,GACJP,MAAO,aAET,CACEO,GAAI,GACJP,MAAO,UAET,CACEO,GAAI,GACJP,MAAO,aAET,CACEO,GAAI,GACJP,MAAO,WAET,CACEO,GAAI,GACJP,MAAO,YAET,CACEO,GAAI,GACJP,MAAO,OAET,CACEO,GAAI,GACJP,MAAO,eAET,CACEO,GAAI,GACJP,MAAO,WAET,CACEO,GAAI,GACJP,MAAO,YAET,CACEO,GAAI,GACJP,MAAO,yBAET,CACEO,GAAI,GACJP,MAAO,qBAET,CACEO,GAAI,GACJP,MAAO,yCAET,CACEO,GAAI,GACJP,MAAO,wCAgBX,OACE,sBAAKC,UAAWC,IAAOyD,mBAAvB,UACE,uBAAO5C,QAAQ,WAAWd,UAAWC,IAAO0D,WAA5C,8BAEA,wBAAQ9C,KAAK,WACbP,GAAG,WACHH,SAlBqB,SAAC2C,GACxB,IAAIc,EAASH,EACVrE,KAAI,SAACC,GACJ,GAAIyD,EAAMD,OAAO9C,QAAUV,EAAKU,MAC9B,OAAOV,EAAKiB,MAGf2C,QAAO,SAAC7C,GAAD,OAAOA,KAEjBpB,EAAM6E,iBAAiBD,EAAO,KAU5B5D,UAAWC,IAAO6D,cAHlB,SAIGL,EAAarE,KAAI,SAACC,GAAD,OAChB,cAAC,EAAD,CAAmBU,MAAOV,EAAKU,MAAOO,GAAIjB,EAAKiB,IAASjB,EAAKiB,aC1GxDyD,EAtBW,SAAC/E,GAKzB,OACE,sBAAKgB,UAAWC,IAAOyD,mBAAvB,UACE,uBAAO5C,QAAQ,YAAYd,UAAWC,IAAO0D,WAA7C,gCAEA,yBACA9C,KAAK,YACJP,GAAG,YACHH,SAXqB,SAAC2C,GACzB9D,EAAMgF,kBAAkBlB,EAAMD,OAAO9C,QAWlCC,UAAWC,IAAO6D,cAJnB,UAKE,wBAAQ/D,MAAM,OAAd,kBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,OAAd,yB,iBCEOkE,EAdU,SAACjF,GAEtB,OAEI,eAAC,EAAD,CAAMuC,OAAQvC,EAAMkF,WAAYhD,MAAOjB,IAAOkE,SAA9C,UACI,cAAC,EAAD,CAAkBN,iBAAkB7E,EAAMoF,gBAC1C,cAAC,EAAD,CAAmBJ,kBAAmBhF,EAAMqF,iBAC5C,cAAC,EAAD,CAAanD,MAAOjB,IAAOqE,WAA3B,wBC0CGC,EAjDI,WACjB,MAAkCvC,mBAAS,QAA3C,mBAAOwC,EAAP,KAAkBC,EAAlB,KACA,EAAgCzC,mBAAS,gBAAzC,mBAAO0C,EAAP,KAAiBC,EAAjB,KACA,EAA0C3C,mBAAS,IAAnD,mBAAO4C,EAAP,KAAsBC,EAAtB,KACA,EAAwC7C,oBAAS,GAAjD,mBAAO8C,EAAP,KAAqBC,EAArB,KA4BA,OACE,cAAC,WAAD,UACGD,EACC,cAAC,EAAD,CACEtE,SAAUoE,EACV7C,cAAegD,IAEd,cAAC,EAAD,CACDb,WA1Ba,SAAC9D,GACpBA,EAAE2C,iBAEF,IAAIiC,EACW,iBAAbN,EAAA,yDACsDA,EADtD,uBAC6EF,EAAUS,eADvF,wCAIFC,IAAMC,IAAIH,GAAeI,MAAK,SAACC,GACL,MAApBA,EAASC,SAIbT,EAAiBQ,GACjBN,GAAgB,QAaZX,cA/Bc,SAACmB,GACrBZ,EAAYY,IA+BNlB,eApCe,SAACmB,GACtBf,EAAae,S,MCJFC,MAJf,WACE,OAAO,cAACC,EAAD,KCDTC,IAASC,OAAO,cAAC,EAAD,IAAShG,SAASiG,eAAe,U,kBCJjDhH,EAAOC,QAAU,CAAC,kBAAoB,6CAA6C,kBAAoB,6CAA6C,eAAiB,0CAA0C,mBAAqB,8CAA8C,SAAW,sC,kBCA7RD,EAAOC,QAAU,CAAC,QAAU,4BAA4B,iBAAmB,qCAAqC,aAAe,oC","file":"static/js/main.e0b0d950.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"questionFormButton\":\"questionForm_questionFormButton__2l1YA\",\"validatorErrorMessage\":\"questionForm_validatorErrorMessage__10Foh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quizForm\":\"quizFormSelector_quizForm__31BEx\",\"quizButton\":\"quizFormSelector_quizButton__3C9QT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonContainer\":\"startButton_buttonContainer__3ftxW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputLabel\":\"menuInputs_inputLabel__3Sqr_\",\"inputSelector\":\"menuInputs_inputSelector__2y9_6\",\"menuInputContainer\":\"menuInputs_menuInputContainer__3yUBP\"};","import styles from \"./questionFormItems.module.css\";\r\n\r\nconst QuestionFormItems = (props) => {\r\n  const incorrentAnswer = props.questions.incorrect_answers.map((item) => {\r\n    return item;\r\n  });\r\n  const correctAnswers = [props.questions.correct_answer];\r\n\r\n  const allQuestion = [...incorrentAnswer, ...correctAnswers];\r\n\r\n  function decodeHtml(html) {\r\n    var txt = document.createElement(\"textarea\");\r\n    txt.innerHTML = html;\r\n    return txt.value;\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={styles.questionContainer}\r\n      onChange={(e) => props.click(e, props.id)}\r\n    >\r\n      <p className={styles.questionParagraph}>\r\n        {decodeHtml(props.questions.question)}\r\n      </p>\r\n\r\n      {allQuestion.map((item) => {\r\n        let id = Math.random();\r\n        return (\r\n          <div className={styles.inputContainer}>\r\n            <input\r\n              type=\"radio\"\r\n              id={id}\r\n              value={item}\r\n              name={props.id}\r\n              key={props.id}\r\n            />\r\n            <label htmlFor={id} className={styles.questionInputLabel}>\r\n              {decodeHtml(item)}\r\n            </label>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuestionFormItems;\r\n","import React from \"react\";\r\nimport styles from './startButton.module.css'\r\n\r\nconst Button = (props) => {\r\n  return (\r\n    <div className={styles.buttonContainer}>\r\n      <button type=\"submit\" \r\n              value=\"Submit\" \r\n              className={props.style} \r\n              onClick={props.onClick}>\r\n\r\n             {props.children}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","const Form = (props) => {\r\n    \r\n\r\nreturn(\r\n\r\n    <form onSubmit={props.submit} className={props.style}>\r\n        {props.children}\r\n    </form>\r\n)\r\n\r\n}\r\n\r\n\r\nexport default Form;","import styles from \"./testResult.module.css\";\r\nimport Button from \"../helper/Button\";\r\n\r\nconst testResult = (props) => {\r\n  return (\r\n    <div className={styles.resultsContainer}>\r\n      <p className={styles.results}>Your Score Is : {props.result}</p>\r\n      <Button style={styles.repeatButton} onClick={props.repeatButtonHandler}>\r\n        Repeat Test\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default testResult;\r\n","import { useState, Fragment } from \"react\";\r\nimport QuestionFormItems from \"./QuestionFormItems/QuestionFormItems\";\r\nimport Button from \"../helper/Button\";\r\nimport Form from \"../helper/Form\";\r\nimport styles from \"./questionForm.module.css\";\r\nimport Result from \"../quizResult/TestResult\";\r\n\r\nconst QuestionForm = ({ question, resetQuizForm }) => {\r\n  const [value, setValue] = useState(\r\n    new Array(question.data.results.length).fill(null)\r\n  );\r\n  const [choosedCorrectAnswer, setChoosedCorrectAnswer] = useState([]);\r\n  const [quizIsFinished, setQuizIsFinished] = useState(false);\r\n  const [inputRadioValidated, setInputIsNotValidated] = useState(false);\r\n\r\n  let correctAnswers = question.data.results.map((e) => e.correct_answer);\r\n\r\n  const onChangeHandler = (e, id) => {\r\n    value[id] = e.target.value;\r\n\r\n    setValue(value);\r\n  };\r\n\r\n  const onSubmitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    let choosedQuestion = value.filter(\r\n      (item, id) => item === correctAnswers[id]\r\n    );\r\n    setChoosedCorrectAnswer(choosedQuestion);\r\n\r\n    let otherThanNull = value.some(function (el) {\r\n      return el === null;\r\n    });\r\n\r\n    if (otherThanNull) {\r\n      setInputIsNotValidated(true);\r\n      return;\r\n    }\r\n\r\n    setQuizIsFinished(true);\r\n  };\r\n\r\n  const QuestionForm = (\r\n    <Fragment>\r\n      {\r\n        <Form submit={onSubmitHandler}>\r\n          {question.data.results.map((items, id) => {\r\n            return (\r\n              <QuestionFormItems\r\n                key={id}\r\n                questions={items}\r\n                id={id}\r\n                click={onChangeHandler}\r\n              />\r\n            );\r\n          })}\r\n          {inputRadioValidated && (\r\n            <p className={styles.validatorErrorMessage}>Select All Input</p>\r\n          )}\r\n          <Button style={styles.questionFormButton}>Finish</Button>\r\n        </Form>\r\n      }\r\n    </Fragment>\r\n  );\r\n\r\n  const repeatButtonHandler = () => {\r\n    resetQuizForm(false);\r\n    setQuizIsFinished(false);\r\n    setChoosedCorrectAnswer([]);\r\n    setValue(new Array(question.data.results.length).fill(null));\r\n  };\r\n  return (\r\n    <Fragment>\r\n      {!quizIsFinished && QuestionForm}\r\n      {quizIsFinished && (\r\n        <Result\r\n          result={choosedCorrectAnswer.length}\r\n          repeatButtonHandler={repeatButtonHandler}\r\n        />\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\nexport default QuestionForm;\r\n","function CategoryInputItem(props) {\r\n  return (\r\n    <option value={props.value} id={props.id} key={props.id}>\r\n      {props.value}\r\n    </option>\r\n  );\r\n}\r\n\r\nexport default CategoryInputItem;\r\n","import React from \"react\";\r\nimport CategoryInputItem from \"./categorySelectorItem/CategoryinputItem\";\r\nimport styles from './menuInputs.module.css';\r\n\r\nconst CategorySelector = (props) => {\r\n  const quizCategory = [\r\n    {\r\n      id: \"any\",\r\n      value: \"Any Category\",\r\n    },\r\n\r\n    {\r\n      id: 9,\r\n      value: \"General Knowledge\",\r\n    },\r\n    {\r\n      id: 10,\r\n      value: \"Entertainment: Books\",\r\n    },\r\n    {\r\n      id: 11,\r\n      value: \"Entertainment: Film\",\r\n    },\r\n    {\r\n      id: 12,\r\n      value: \"Entertainment: Music\",\r\n    },\r\n    {\r\n      id: 13,\r\n      value: \"Entertainment: Musicals & Theatres\",\r\n    },\r\n    {\r\n      id: 14,\r\n      value: \"Entertainment: Television\",\r\n    },\r\n    {\r\n      id: 15,\r\n      value: \"Entertainment: Video Games\",\r\n    },\r\n    {\r\n      id: 16,\r\n      value: \"Entertainment: Board Games\",\r\n    },\r\n    {\r\n      id: 17,\r\n      value: \"Science & Nature\",\r\n    },\r\n    {\r\n      id: 18,\r\n      value: \"Science : Computers\",\r\n    },\r\n    {\r\n      id: 19,\r\n      value: \"Science : Mathematics\",\r\n    },\r\n    {\r\n      id: 20,\r\n      value: \"Mythology\",\r\n    },\r\n    {\r\n      id: 21,\r\n      value: \"Sports\",\r\n    },\r\n    {\r\n      id: 22,\r\n      value: \"Geography\",\r\n    },\r\n    {\r\n      id: 23,\r\n      value: \"History\",\r\n    },\r\n    {\r\n      id: 24,\r\n      value: \"Politics\",\r\n    },\r\n    {\r\n      id: 25,\r\n      value: \"Art\",\r\n    },\r\n    {\r\n      id: 26,\r\n      value: \"Celebrities\",\r\n    },\r\n    {\r\n      id: 27,\r\n      value: \"Animals\",\r\n    },\r\n    {\r\n      id: 28,\r\n      value: \"vehicles\",\r\n    },\r\n    {\r\n      id: 29,\r\n      value: \"Entertainment: Comics\",\r\n    },\r\n    {\r\n      id: 30,\r\n      value: \"Science : Gadgets\",\r\n    },\r\n    {\r\n      id: 31,\r\n      value: \"Entertainment: Japanese Anime & Manga\",\r\n    },\r\n    {\r\n      id: 32,\r\n      value: \"Entertainment: Cartoon & Animations\",\r\n    },\r\n  ];\r\n\r\n  const categoryListener = (event) => {\r\n    let itemId = quizCategory\r\n      .map((item) => {\r\n        if (event.target.value === item.value) {\r\n          return item.id;\r\n        }\r\n      })\r\n      .filter((e) => e);\r\n\r\n    props.onChangeCategory(itemId[0]);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.menuInputContainer}>\r\n      <label htmlFor=\"category\" className={styles.inputLabel}>Select Category:</label>\r\n\r\n      <select name=\"category\" \r\n      id=\"category\" \r\n      onChange={categoryListener}\r\n      className={styles.inputSelector}>\r\n        {quizCategory.map((item) => (\r\n          <CategoryInputItem value={item.value} id={item.id} key={item.id} />\r\n        ))}\r\n      </select>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CategorySelector;\r\n","import React from \"react\";\r\nimport styles from './menuInputs.module.css';\r\nconst DifficultSelector = (props) => {\r\n  const difficultListener = (event) => {\r\n    props.onChangeDifficult(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.menuInputContainer}>\r\n      <label htmlFor=\"difficult\" className={styles.inputLabel}>Select Difficulty:</label>\r\n\r\n      <select \r\n      name=\"difficult\"\r\n       id=\"difficult\" \r\n       onChange={difficultListener}\r\n       className={styles.inputSelector}>\r\n        <option value=\"easy\">Easy</option>\r\n        <option value=\"medium\">Medium</option>\r\n        <option value=\"hard\">Hard</option>\r\n      </select>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DifficultSelector;\r\n","import Form from '../helper/Form'\r\nimport CategorySelector from \"./CategorySelector\";\r\nimport DifficultSelector from \"./DifficultSelector\";\r\nimport StartButton from \"../helper/Button\";\r\nimport styles from './quizFormSelector.module.css';\r\n\r\nconst QuizFormSelector = (props) => {\r\n\r\n    return (\r\n\r\n        <Form submit={props.SubmitForm} style={styles.quizForm}> \r\n            <CategorySelector onChangeCategory={props.categoryInput} />  \r\n            <DifficultSelector onChangeDifficult={props.difficultInput}/>\r\n            <StartButton style={styles.quizButton}>Submit</StartButton>\r\n         </Form>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default QuizFormSelector;","import React, { useState, Fragment } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport QuestionForm from \"./questionsForm/QuestionsForm\";\r\nimport QuizFormSelector from \"./InputSelectors/QuizFormSelector\";\r\n\r\nconst CreateForm = () => {\r\n  const [Difficult, setDifficult] = useState(\"Easy\");\r\n  const [category, setCategory] = useState(\"Any Category\");\r\n  const [quizQuestions, setQuizQuestions] = useState(\"\");\r\n  const [formSubmited, setFormSubmited] = useState(false);\r\n\r\n  const difficultInput = (SelectedDifficult) => {\r\n    setDifficult(SelectedDifficult);\r\n  };\r\n\r\n  const categoryInput = (SelectedCategory) => {\r\n    setCategory(SelectedCategory);\r\n  };\r\n\r\n  const onSubmitForm = (e) => {\r\n    e.preventDefault();\r\n\r\n    let whichCategory =\r\n      category !== \"Any Category\"\r\n        ? `https://opentdb.com/api.php?amount=10&category=${category}&difficulty=${Difficult.toLowerCase()}`\r\n        : `https://opentdb.com/api.php?amount=10`;\r\n\r\n    axios.get(whichCategory).then((response) => {\r\n      if (response.status !== 200) {\r\n        return;\r\n      }\r\n\r\n      setQuizQuestions(response);\r\n      setFormSubmited(true);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {formSubmited ? (\r\n        <QuestionForm\r\n          question={quizQuestions}\r\n          resetQuizForm={setFormSubmited}\r\n        />\r\n      ) : (<QuizFormSelector\r\n          SubmitForm={onSubmitForm}\r\n          categoryInput={categoryInput}\r\n          difficultInput={difficultInput}\r\n        />\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default CreateForm;\r\n","import React from \"react\";\nimport QuizForm from \"./components/QuizForm\";\n\nimport \"./App.css\";\n\nfunction App() {\n  return <QuizForm />;\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"questionParagraph\":\"questionFormItems_questionParagraph__1jO4G\",\"questionContainer\":\"questionFormItems_questionContainer__Xm52t\",\"inputContainer\":\"questionFormItems_inputContainer__3Ih6L\",\"questionInputLabel\":\"questionFormItems_questionInputLabel__11d1g\",\"inpuItem\":\"questionFormItems_inpuItem__rErbn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"results\":\"testResult_results__B-dtg\",\"resultsContainer\":\"testResult_resultsContainer__1zK4R\",\"repeatButton\":\"testResult_repeatButton__3vekS\"};"],"sourceRoot":""}